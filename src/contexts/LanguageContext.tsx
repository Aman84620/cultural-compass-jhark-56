import React, { createContext, useContext, useState, ReactNode } from 'react';

export interface Language {
  code: string;
  name: string;
  flag: string;
}

export const languages: Language[] = [
  { code: 'en', name: 'English', flag: 'ЁЯЗмЁЯЗз' },
  { code: 'hi', name: 'рд╣рд┐рдиреНрджреА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'bn', name: 'ржмрж╛ржВрж▓рж╛', flag: 'ЁЯЗзЁЯЗй' },
  { code: 'mr', name: 'рдорд░рд╛рдареА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'or', name: 'рмУрмбрм╝рм┐рмЖ', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'as', name: 'ржЕрж╕ржорзАржпрж╝рж╛', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'gu', name: 'ркЧрлБркЬрк░рк╛ркдрлА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'pa', name: 'рикрй░риЬри╛римрйА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'ta', name: 'родрооро┐ро┤рпН', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'te', name: 'р░др▒Жр░▓р▒Бр░Чр▒Б', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'kn', name: 'р▓Хр▓ир│Нр▓ир▓б', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'ml', name: 'р┤ор┤▓р┤пр┤╛р┤│р┤В', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'ur', name: '╪з╪▒╪п┘И', flag: 'ЁЯЗ╡ЁЯЗ░' },
];

// Translations object
export const translations: Record<string, Record<string, string>> = {
  en: {
    'explore_jharkhand': 'Explore Jharkhand',
    'land_of_forests': 'Jharkhand тАФ The Land of Forests, Culture & Safety',
    'search_attractions': 'Search nearby attractions...',
    'plan_trip': 'Plan Trip',
    'destinations': 'Destinations',
    'ar_vr': 'AR/VR',
    'marketplace': 'Marketplace',
    'events': 'Events',
    'food': 'Food',
    'hire_guide': 'Hire Guide',
    'transport': 'Transport & Maps',
    'analytics': 'Analytics Dashboard',
    'feedback': 'Feedback',
    'home': 'Home',
    'blockchain_services': 'Blockchain Services',
    'transport_info': 'Transport Info',
    'sos': 'Emergency SOS',
    'welcome_message': 'Hi ЁЯСЛ, welcome to Jharkhand Tourism! How can I help you today?',
    'cultural_events': 'Cultural Events & Festivals',
    'authentic_cuisine': 'Authentic Jharkhand Cuisine',
    'verified_guides': 'Verified Local Guides',
    'ai_powered': 'AI Powered Features',
    'immersive_experience': 'Immersive AR/VR Experience',
    'local_marketplace': 'Local Marketplace',
    'navigate_ease': 'Navigate Jharkhand with ease',
    'tourism_insights': 'Tourism insights and engagement metrics',
    'share_feedback': 'Share Your Feedback'
  },
  hi: {
    'explore_jharkhand': 'рдЭрд╛рд░рдЦрдВрдб рдХрд╛ рдЕрдиреНрд╡реЗрд╖рдг рдХрд░реЗрдВ',
    'land_of_forests': 'рдЭрд╛рд░рдЦрдВрдб тАФ рд╡рдиреЛрдВ, рд╕рдВрд╕реНрдХреГрддрд┐ рдФрд░ рд╕реБрд░рдХреНрд╖рд╛ рдХреА рднреВрдорд┐',
    'search_attractions': 'рдЖрд╕-рдкрд╛рд╕ рдХреЗ рдЖрдХрд░реНрд╖рдг рдЦреЛрдЬреЗрдВ...',
    'plan_trip': 'рдпрд╛рддреНрд░рд╛ рдХреА рдпреЛрдЬрдирд╛',
    'destinations': 'рдЧрдВрддрд╡реНрдп',
    'ar_vr': 'рдПрдЖрд░/рд╡реАрдЖрд░',
    'marketplace': 'рдмрд╛рдЬрд╝рд╛рд░',
    'events': 'рдХрд╛рд░реНрдпрдХреНрд░рдо',
    'food': 'рднреЛрдЬрди',
    'hire_guide': 'рдЧрд╛рдЗрдб рднрд░реНрддреА рдХрд░реЗрдВ',
    'transport': 'рдкрд░рд┐рд╡рд╣рди рдФрд░ рдорд╛рдирдЪрд┐рддреНрд░',
    'analytics': 'рдПрдирд╛рд▓рд┐рдЯрд┐рдХреНрд╕ рдбреИрд╢рдмреЛрд░реНрдб',
    'feedback': 'рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛',
    'home': 'рд╣реЛрдо',
    'blockchain_services': 'рдмреНрд▓реЙрдХрдЪреЗрди рд╕реЗрд╡рд╛рдПрдВ',
    'transport_info': 'рдкрд░рд┐рд╡рд╣рди рдЬрд╛рдирдХрд╛рд░реА',
    'sos': 'рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдПрд╕рдУрдПрд╕',
    'welcome_message': 'рдирдорд╕реНрддреЗ ЁЯСЛ, рдЭрд╛рд░рдЦрдВрдб рдкрд░реНрдпрдЯрди рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рд╕рд╣рд╛рдпрддрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?',
    'cultural_events': 'рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдХрд╛рд░реНрдпрдХреНрд░рдо рдФрд░ рддреНрдпреМрд╣рд╛рд░',
    'authentic_cuisine': 'рдкреНрд░рд╛рдорд╛рдгрд┐рдХ рдЭрд╛рд░рдЦрдВрдб рд╡реНрдпрдВрдЬрди',
    'verified_guides': 'рд╕рддреНрдпрд╛рдкрд┐рдд рд╕реНрдерд╛рдиреАрдп рдЧрд╛рдЗрдб',
    'ai_powered': 'рдПрдЖрдИ рд╕рдВрдЪрд╛рд▓рд┐рдд рд╕реБрд╡рд┐рдзрд╛рдПрдВ',
    'immersive_experience': 'рдЗрдорд░реНрд╕рд┐рд╡ рдПрдЖрд░/рд╡реАрдЖрд░ рдЕрдиреБрднрд╡',
    'local_marketplace': 'рд╕реНрдерд╛рдиреАрдп рдмрд╛рдЬрд╝рд╛рд░',
    'navigate_ease': 'рдЖрд╕рд╛рдиреА рд╕реЗ рдЭрд╛рд░рдЦрдВрдб рдореЗрдВ рдиреЗрд╡рд┐рдЧреЗрдЯ рдХрд░реЗрдВ',
    'tourism_insights': 'рдкрд░реНрдпрдЯрди рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рдФрд░ рдЬреБрдбрд╝рд╛рд╡ рдореЗрдЯреНрд░рд┐рдХреНрд╕',
    'share_feedback': 'рдЕрдкрдиреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ'
  },
  bn: {
    'explore_jharkhand': 'ржЭрж╛ржбрж╝ржЦржгрзНржб ржЕржирзНржмрзЗрж╖ржг ржХрж░рзБржи',
    'land_of_forests': 'ржЭрж╛ржбрж╝ржЦржгрзНржб тАФ ржмржи, рж╕ржВрж╕рзНржХрзГрждрж┐ ржУ ржирж┐рж░рж╛ржкрждрзНрждрж╛рж░ ржнрзВржорж┐',
    'search_attractions': 'ржХрж╛ржЫрж╛ржХрж╛ржЫрж┐ ржЖржХрж░рзНрж╖ржг ржЦрзБржБржЬрзБржи...',
    'plan_trip': 'ржнрзНрж░ржоржг ржкрж░рж┐ржХрж▓рзНржкржирж╛',
    'destinations': 'ржЧржирзНрждржмрзНржп',
    'ar_vr': 'ржПржЖрж░/ржнрж┐ржЖрж░',
    'marketplace': 'ржмрж╛ржЬрж╛рж░',
    'events': 'ржЕржирзБрж╖рзНржарж╛ржи',
    'food': 'ржЦрж╛ржмрж╛рж░',
    'hire_guide': 'ржЧрж╛ржЗржб ржирж┐ржпрж╝рзЛржЧ',
    'transport': 'ржкрж░рж┐ржмрж╣ржи ржУ ржорж╛ржиржЪрж┐рждрзНрж░',
    'analytics': 'ржЕрзНржпрж╛ржирж╛рж▓рж┐ржЯрж┐ржХрзНрж╕ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб',
    'feedback': 'ржорждрж╛ржоржд',
    'home': 'рж╣рзЛржо',
    'blockchain_services': 'ржмрзНрж▓ржХржЪрзЗржЗржи рж╕рзЗржмрж╛',
    'transport_info': 'ржкрж░рж┐ржмрж╣ржи рждржерзНржп',
    'sos': 'ржЬрж░рзБрж░рж┐ ржПрж╕ржУржПрж╕',
    'welcome_message': 'рж╣рзНржпрж╛рж▓рзЛ ЁЯСЛ, ржЭрж╛ржбрж╝ржЦржгрзНржб ржкрж░рзНржпржЯржирзЗ рж╕рзНржмрж╛ржЧрждржо! ржЖржЬ ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржЖржкржирж╛ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐?',
    'cultural_events': 'рж╕рж╛ржВрж╕рзНржХрзГрждрж┐ржХ ржЕржирзБрж╖рзНржарж╛ржи ржУ ржЙрзОрж╕ржм',
    'authentic_cuisine': 'ржкрзНрж░рж╛ржорж╛ржгрж┐ржХ ржЭрж╛ржбрж╝ржЦржгрзНржб рж░ржирзНржзржирж╢рзИрж▓рзА',
    'verified_guides': 'ржпрж╛ржЪрж╛ржЗржХрзГржд рж╕рзНржерж╛ржирзАржпрж╝ ржЧрж╛ржЗржб',
    'ai_powered': 'ржПржЖржЗ ржЪрж╛рж▓рж┐ржд ржмрзИрж╢рж┐рж╖рзНржЯрзНржп',
    'immersive_experience': 'ржирж┐ржоржЬрзНржЬржиржХрж╛рж░рзА ржПржЖрж░/ржнрж┐ржЖрж░ ржЕржнрж┐ржЬрзНржЮрждрж╛',
    'local_marketplace': 'рж╕рзНржерж╛ржирзАржпрж╝ ржмрж╛ржЬрж╛рж░',
    'navigate_ease': 'рж╕рж╣ржЬрзЗ ржЭрж╛ржбрж╝ржЦржгрзНржб ржирзЗржнрж┐ржЧрзЗржЯ ржХрж░рзБржи',
    'tourism_insights': 'ржкрж░рзНржпржЯржи ржЕржирзНрждрж░рзНржжрзГрж╖рзНржЯрж┐ ржПржмржВ ржПржиржЧрзЗржЬржорзЗржирзНржЯ ржорзЗржЯрзНрж░рж┐ржХрзНрж╕',
    'share_feedback': 'ржЖржкржирж╛рж░ ржорждрж╛ржоржд рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи'
  }
};

interface LanguageContextType {
  currentLanguage: Language;
  setCurrentLanguage: (language: Language) => void;
  translate: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

interface LanguageProviderProps {
  children: ReactNode;
}

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [currentLanguage, setCurrentLanguage] = useState<Language>(languages[0]);

  const translate = (key: string): string => {
    return translations[currentLanguage.code]?.[key] || translations.en[key] || key;
  };

  return (
    <LanguageContext.Provider value={{ currentLanguage, setCurrentLanguage, translate }}>
      {children}
    </LanguageContext.Provider>
  );
};